jellyfin:
  enabled: true
  replicaCount: 1
  deploymentAnnotations:
    reloader.stakater.com/auto: "true"
  ingress:
    enabled: true
    className: traefik
    hosts:
      - host: myflix.home.rushidarunte.com
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jellyfin
                port:
                  number: 8096 
  storage:
    configPersistentVolumeClaim:
      createPersistentVolumeClaim: true
      name: "jellyfin-config-pvc"
      capacity: 8Gi
      accessModes:
        - ReadWriteMany

    # Volume Configuration
    volumeMounts:
      - name: config
        mountPath: /config
      - name: config
        mountPath: /cache
      - name: media
        mountPath: /media
        readOnly: false

    volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jellyfin-config-pvc
      - name: media
        persistentVolumeClaim:
          claimName: jellyfin-media-nfs-pvc
  pdb:
    enabled: true
    minAvailable: 1  # Protects during graceful operations
  # Tolerate the alpha taint so it CAN run there
  tolerations:
    - key: "proxmox-node"
      operator: "Equal"
      value: "alpha"
      effect: "NoSchedule"
  # PREFER alpha nodes, but allow others
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100  # High priority for alpha nodes
          preference:
            matchExpressions:
              - key: proxmox-node
                operator: In
                values:
                  - alpha

jellyseerr:
  enabled: true
  replicaCount: 1
  deploymentAnnotations:
    reloader.stakater.com/auto: "true"
  ingress:
    enabled: true
    className: traefik
    hosts:
      - host: jellyseerr.home.rushidarunte.com
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jellyseerr
                port:
                  number: 5055 
  storage:
    configPersistentVolumeClaim:
      createPersistentVolumeClaim: true
      name: "jellyseerr-config-pvc"
      capacity: 2Gi
      accessModes:
        - ReadWriteMany
    # Volume Configuration
    volumeMounts:
      - name: config
        mountPath: /app/config
    volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jellyseerr-config-pvc

radarr:
  enabled: true
  replicaCount: 1
  deploymentAnnotations:
    reloader.stakater.com/auto: "true"
  config:
    data:
      TZ: "Asia/Kolkata"
      RADARR__SERVER__URLBASE: /radarr
  envFrom:
    - configMapRef:
        name: radarr-config
  ingress:
    enabled: true
    className: traefik
    hosts:
      - host: myflix.home.rushidarunte.com
        paths:
          - path: /radarr
            pathType: Prefix
            backend:
              service:
                name: radarr
                port:
                  number: 7878
  storage:
    configPersistentVolumeClaim:
      createPersistentVolumeClaim: true
      name: "radarr-config-pvc"
      capacity: 2Gi
      accessModes:
        - ReadWriteMany
    # Volume Configuration
    volumeMounts:
      - name: config
        mountPath: /config
      - name: media
        mountPath: /downloads
        subPath: qbittorrent/downloads
        readOnly: false
      - name: media
        mountPath: /data/movies
        subPath: movies
        readOnly: false

    volumes:
      - name: config
        persistentVolumeClaim:
          claimName: radarr-config-pvc
      - name: media
        persistentVolumeClaim:
          claimName: jellyfin-media-nfs-pvc
  
sonarr:
  enabled: true
  replicaCount: 1
  deploymentAnnotations:
    reloader.stakater.com/auto: "true"
  config:
    data:
      TZ: "Asia/Kolkata"
      SONARR__SERVER__URLBASE: /sonarr
  envFrom:
    - configMapRef:
        name: sonarr-config
  ingress:
    enabled: true
    className: traefik
    hosts:
      - host: myflix.home.rushidarunte.com
        paths:
          - path: /sonarr
            pathType: Prefix
            backend:
              service:
                name: sonarr
                port:
                  number: 8989
  storage:
    configPersistentVolumeClaim:
      createPersistentVolumeClaim: true
      name: "sonarr-config-pvc"
      capacity: 2Gi
      accessModes:
        - ReadWriteMany
    # Volume Configuration
    volumeMounts:
      - name: config
        mountPath: /config
      - name: media
        mountPath: /downloads
        subPath: qbittorrent/downloads
        readOnly: false
      - name: media
        mountPath: /data/tvshows
        subPath: tvshows
        readOnly: false

    volumes:
      - name: config
        persistentVolumeClaim:
          claimName: sonarr-config-pvc
      - name: media
        persistentVolumeClaim:
          claimName: jellyfin-media-nfs-pvc

prowlarr:
  enabled: true
  replicaCount: 1
  deploymentAnnotations:
    reloader.stakater.com/auto: "true"
  config:
    data:
      TZ: "Asia/Kolkata"
      PROWLARR__SERVER__URLBASE: /prowlarr
  envFrom:
    - configMapRef:
        name: prowlarr-config
  ingress:
    enabled: true
    className: traefik
    hosts:
      - host: myflix.home.rushidarunte.com
        paths:
          - path: /prowlarr
            pathType: Prefix
            backend:
              service:
                name: prowlarr
                port:
                  number: 9696

  storage:
    configPersistentVolumeClaim:
      createPersistentVolumeClaim: true
      name: "prowlarr-config-pvc"
      capacity: 2Gi
      accessModes:
        - ReadWriteMany
    # Volume Configuration
    volumeMounts:
      - name: config
        mountPath: /config
        subPath: prowlarr-config

    volumes:
      - name: config
        persistentVolumeClaim:
          claimName: prowlarr-config-pvc

jackett:
  enabled: true
  replicaCount: 1
  deploymentAnnotations:
    reloader.stakater.com/auto: "true"
  ingress:
    enabled: true
    className: traefik
    hosts:
      - host: myflix.home.rushidarunte.com
        paths:
          - path: /jackett
            pathType: Prefix
            backend:
              service:
                name: jackett
                port:
                  number: 9117 
  storage:
    configPersistentVolumeClaim:
      createPersistentVolumeClaim: true
      name: "jackett-config-pvc"
      capacity: 2Gi
      accessModes:
        - ReadWriteMany
    # Volume Configuration
    volumeMounts:
      - name: config
        mountPath: /config
        subPath: jackett-config

    volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jackett-config-pvc

qbittorrent:
  enabled: true
  replicaCount: 1
  deploymentAnnotations:
    reloader.stakater.com/auto: "true"
  config:
    data:
      TZ: "Asia/Kolkata"
      WEBUI_PORT: "8080"
      TORRENTING_PORT: "6881"
  envFrom:
    - configMapRef:
        name: qbittorrent-config
  ingress:
    enabled: true
    className: traefik
    hosts:
      - host: qbit.home.rushidarunte.com
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: qbittorrent
                port:
                  number: 8080 
  storage:
    configPersistentVolumeClaim:
      createPersistentVolumeClaim: true
      name: "qbittorrent-config-pvc"
      capacity: 2Gi
      accessModes:
        - ReadWriteMany
    # Volume Configuration
    volumeMounts:
      - name: config
        mountPath: /config
      - name: media
        mountPath: /downloads
        subPath: qbittorrent/downloads
        readOnly: false

    volumes:
      - name: config
        persistentVolumeClaim:
          claimName: qbittorrent-config-pvc
      - name: media
        persistentVolumeClaim:
          claimName: jellyfin-media-nfs-pvc

lidarr:
  enabled: true
  replicaCount: 1
  deploymentAnnotations:
    reloader.stakater.com/auto: "true"
  config:
    data:
      TZ: "Asia/Kolkata"
  envFrom:
    - configMapRef:
        name: lidarr-config
  ingress:
    enabled: false
    className: traefik
    hosts:
      - host: myflix.home.rushidarunte.com
        paths:
          - path: /lidarr
            pathType: Prefix
            backend:
              service:
                name: lidarr
                port:
                  number: 8686
  storage:
    configPersistentVolumeClaim:
      createPersistentVolumeClaim: true
      name: "lidarr-config-pvc"
      capacity: 2Gi
      accessModes:
        - ReadWriteMany
    # Volume Configuration
    volumeMounts:
      - name: config
        mountPath: /config
      - name: media
        mountPath: /data/Musics
        subPath: "musics"
        readOnly: false
      - name: media
        mountPath: /data/downloads/torrents
        subPath: "qbittorrent/downloads"
        readOnly: false

    volumes:
      - name: config
        persistentVolumeClaim:
          claimName: lidarr-config-pvc
      - name: media
        persistentVolumeClaim:
          claimName: jellyfin-media-nfs-pvc

slskd:
  enabled: true
  replicaCount: 1
  deploymentAnnotations:
    reloader.stakater.com/auto: "true"
  config:
    data:
      TZ: "Asia/Kolkata"
      SLSKD_REMOTE_CONFIGURATION: "true"
  envFrom:
    - configMapRef:
        name: slskd-config
  ingress:
    enabled: false
    className: traefik
    hosts:
      - host: myflix.home.rushidarunte.com
        paths:
          - path: /slskd
            pathType: Prefix
            backend:
              service:
                name: slskd
                port:
                  number: 5030
  
soularr:
  enabled: true
  replicaCount: 1
  deploymentAnnotations:
    reloader.stakater.com/auto: "true"
  config:
    data:
      TZ: "Asia/Kolkata"
      SCRIPT_INTERVAL: "300"
  envFrom:
    - configMapRef:
        name: soularr-config
  ingress:
    enabled: false
    className: traefik
    hosts:
      - host: myflix.home.rushidarunte.com
        paths:
          - path: /soularr
            pathType: Prefix
            backend:
              service:
                name: soularr
                port:
                  number: 8686